version: '3.8'

services:
  postgres:
    image: docker.io/library/postgres:15
    environment:
      POSTGRES_DB: holiday_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: holiday_db
      DB_USER: postgres
      DB_PASSWORD: password
      PORT: 3000
      # OpenTelemetry environment variables
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: otlp
      OTEL_LOGS_EXPORTER: otlp
      OTEL_NODE_RESOURCE_DETECTORS: env,host,os
      OTEL_RESOURCE_ATTRIBUTES: "service.name=holiday-api,service.namespace=holidays,deployment.environment=development"
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
      OTEL_EXPORTER_OTLP_HEADERS: ${OTEL_EXPORTER_OTLP_HEADERS}
      NODE_OPTIONS: "--require @opentelemetry/auto-instrumentations-node/register"  # Essential to bootstrap OpenTelemetry
      # OTEL_LOG_LEVEL: debug  # optional debug logging
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
